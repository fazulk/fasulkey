{"version":3,"sources":["../../../../src/graphql/resolvers/user/index.js"],"names":["Query","user","parent","context","info","id","User","findOne","user_name","name","users","find","Mutation","addUser","root","email","newUser","save","editUser","findOneAndUpdate","$set","deleteUser","args","findOneAndRemove"],"mappings":";;;;;;AACA;;;;;;2cADA;;;kBAGe;AACXA,WAAO;AACHC;AAAA,gFAAM,iBAAOC,MAAP,QAAuBC,OAAvB,EAAgCC,IAAhC;AAAA,oBAAiBC,EAAjB,QAAiBA,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCACWC,gBAAKC,OAAL,CAAa,EAAEF,MAAF,EAAb,CADX;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAN;;AAAA;AAAA;AAAA;;AAAA;AAAA,WADG;AAIHG;AAAA,gFAAW,kBAAON,MAAP,SAAyBC,OAAzB,EAAkCC,IAAlC;AAAA,oBAAiBK,IAAjB,SAAiBA,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCACMH,gBAAKC,OAAL,CAAa,EAAEE,UAAF,EAAb,CADN;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAX;;AAAA;AAAA;AAAA;;AAAA;AAAA,WAJG;AAOHC;AAAA,gFAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCACUJ,gBAAKK,IAAL,CAAU,EAAV,CADV;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAPG,KADI;AAYXC,cAAU;AACNC;AAAA,gFAAS,kBAAOC,IAAP;AAAA,oBAAeT,EAAf,SAAeA,EAAf;AAAA,oBAAmBI,IAAnB,SAAmBA,IAAnB;AAAA,oBAAyBM,KAAzB,SAAyBA,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,uCADD,GACW,IAAIV,eAAJ,CAAS,EAAED,MAAF,EAAMI,UAAN,EAAYM,YAAZ,EAAT,CADX;AAAA;AAAA,uCAEQC,QAAQC,IAAR,EAFR;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAT;;AAAA;AAAA;AAAA;;AAAA;AAAA,WADM;AAKNC;AAAA,gFAAU,kBAAOJ,IAAP;AAAA,oBAAeT,EAAf,SAAeA,EAAf;AAAA,oBAAmBI,IAAnB,SAAmBA,IAAnB;AAAA,oBAAyBM,KAAzB,SAAyBA,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCACOT,gBAAKa,gBAAL,CACT,EAAEd,MAAF,EADS,EAET,EAAEe,MAAM,EAAEX,UAAF,EAAQM,YAAR,EAAR,EAFS,CADP;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAV;;AAAA;AAAA;AAAA;;AAAA;AAAA,WALM;AAWNM;AAAA,iFAAY,kBAAOP,IAAP,EAAaQ,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCACKhB,gBAAKiB,gBAAL,CAAsBD,IAAtB,CADL;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAZ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAXM;AAZC,C","file":"index.js","sourcesContent":["// The User schema.\nimport User from '@models/users'\n\nexport default {\n    Query: {\n        user: async (parent, { id }, context, info) => {\n            return await User.findOne({ id })\n        },\n        user_name: async (parent, { name }, context, info) => {\n            return await User.findOne({ name })\n        },\n        users: async () => {\n            return await User.find({})\n        }\n    },\n    Mutation: {\n        addUser: async (root, { id, name, email }) => {\n            const newUser = new User({ id, name, email })\n            return await newUser.save()\n        },\n        editUser: async (root, { id, name, email }) => {\n            return await User.findOneAndUpdate(\n                { id },\n                { $set: { name, email } }\n            )\n        },\n        deleteUser: async (root, args) => {\n            return await User.findOneAndRemove(args)\n        }\n    }\n}\n"]}